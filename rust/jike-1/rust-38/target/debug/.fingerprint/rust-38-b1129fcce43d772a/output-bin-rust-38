{"message":"expected `;`, found `}`","code":null,"level":"error","spans":[{"file_name":"src/main.rs","byte_start":336,"byte_end":337,"line_start":17,"line_end":17,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"unexpected token","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":335,"byte_end":335,"line_start":16,"line_end":16,"column_start":12,"column_end":12,"is_primary":true,"text":[{"text":"    let yma","highlight_start":12,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"add `;` here","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":335,"byte_end":335,"line_start":16,"line_end":16,"column_start":12,"column_end":12,"is_primary":true,"text":[{"text":"    let yma","highlight_start":12,"highlight_end":12}],"label":null,"suggested_replacement":";","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected `;`, found `}`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:16:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let yma\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: add `;` here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12munexpected token\u001b[0m\n\n"}
{"message":"expected `;`, found `}`","code":null,"level":"error","spans":[{"file_name":"src/main.rs","byte_start":417,"byte_end":418,"line_start":21,"line_end":21,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":"unexpected token","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":416,"byte_end":416,"line_start":20,"line_end":20,"column_start":31,"column_end":31,"is_primary":true,"text":[{"text":"    let value: Value = toml::f","highlight_start":31,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"add `;` here","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":416,"byte_end":416,"line_start":20,"line_end":20,"column_start":31,"column_end":31,"is_primary":true,"text":[{"text":"    let value: Value = toml::f","highlight_start":31,"highlight_end":31}],"label":null,"suggested_replacement":";","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected `;`, found `}`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:20:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let value: Value = toml::f\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: add `;` here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12munexpected token\u001b[0m\n\n"}
{"message":"expected `;`","code":null,"level":"error","spans":[{"file_name":"src/main.rs","byte_start":336,"byte_end":337,"line_start":17,"line_end":17,"column_start":1,"column_end":2,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: expected `;`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:17:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\n\n"}
{"message":"unresolved import `anyhow`","code":{"code":"E0432","explanation":"An import was unresolved.\n\nErroneous code example:\n\n```compile_fail,E0432\nuse something::Foo; // error: unresolved import `something::Foo`.\n```\n\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\nimport items relative to the current and parent modules, use the `self::` and\n`super::` prefixes, respectively.\n\nIn Rust 2018, paths in `use` statements are relative to the current module\nunless they begin with the name of a crate or a literal `crate::`, in which\ncase they start from the crate root. As in Rust 2015 code, the `self::` and\n`super::` prefixes refer to the current and parent modules respectively.\n\nAlso verify that you didn't misspell the import name and that the import exists\nin the module from where you tried to import it. Example:\n\n```\nuse self::something::Foo; // Ok.\n\nmod something {\n    pub struct Foo;\n}\n# fn main() {}\n```\n\nIf you tried to use a module from an external crate and are using Rust 2015,\nyou may have missed the `extern crate` declaration (which is usually placed in\nthe crate root):\n\n```edition2015\nextern crate core; // Required to use the `core` crate in Rust 2015.\n\nuse core::any;\n# fn main() {}\n```\n\nIn Rust 2018 the `extern crate` declaration is not required and you can instead\njust `use` it:\n\n```edition2018\nuse core::any; // No extern crate required in Rust 2018.\n# fn main() {}\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":98,"byte_end":104,"line_start":7,"line_end":7,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"use anyhow::Result;","highlight_start":5,"highlight_end":11}],"label":"use of undeclared crate or module `anyhow`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0432]\u001b[0m\u001b[0m\u001b[1m: unresolved import `anyhow`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:7:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0muse anyhow::Result;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `anyhow`\u001b[0m\n\n"}
{"message":"failed to resolve: use of undeclared crate or module `toml`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":409,"byte_end":413,"line_start":20,"line_end":20,"column_start":24,"column_end":28,"is_primary":true,"text":[{"text":"    let value: Value = toml::f","highlight_start":24,"highlight_end":28}],"label":"use of undeclared crate or module `toml`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: use of undeclared crate or module `toml`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:20:24\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let value: Value = toml::f\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `toml`\u001b[0m\n\n"}
{"message":"cannot find type `Value` in this scope","code":{"code":"E0412","explanation":"A used type name is not in scope.\n\nErroneous code examples:\n\n```compile_fail,E0412\nimpl Something {} // error: type name `Something` is not in scope\n\n// or:\n\ntrait Foo {\n    fn bar(N); // error: type name `N` is not in scope\n}\n\n// or:\n\nfn foo(x: T) {} // type name `T` is not in scope\n```\n\nTo fix this error, please verify you didn't misspell the type name, you did\ndeclare it or imported it into the scope. Examples:\n\n```\nstruct Something;\n\nimpl Something {} // ok!\n\n// or:\n\ntrait Foo {\n    type N;\n\n    fn bar(_: Self::N); // ok!\n}\n\n// or:\n\nfn foo<T>(x: T) {} // ok!\n```\n\nAnother case that causes this error is when a type is imported into a parent\nmodule. To fix this, you can follow the suggestion and use File directly or\n`use super::File;` which will import the types from the parent namespace. An\nexample that causes this error is below:\n\n```compile_fail,E0412\nuse std::fs::File;\n\nmod foo {\n    fn some_function(f: File) {}\n}\n```\n\n```\nuse std::fs::File;\n\nmod foo {\n    // either\n    use super::File;\n    // or\n    // use std::fs::File;\n    fn foo(f: File) {}\n}\n# fn main() {} // don't insert it for us; that'll break imports\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":401,"byte_end":406,"line_start":20,"line_end":20,"column_start":16,"column_end":21,"is_primary":true,"text":[{"text":"    let value: Value = toml::f","highlight_start":16,"highlight_end":21}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0412]\u001b[0m\u001b[0m\u001b[1m: cannot find type `Value` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:20:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let value: Value = toml::f\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}
{"message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":281,"byte_end":301,"line_start":14,"line_end":14,"column_start":9,"column_end":29,"is_primary":true,"text":[{"text":"    let (content1, content2) = try_join!(f1, f2);","highlight_start":9,"highlight_end":29}],"label":"expected enum `Result`, found tuple","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/gaolle/.cargo/registry/src/mirrors.tuna.tsinghua.edu.cn-df7c3c540f42cdbd/tokio-1.19.2/src/macros/try_join.rs","byte_start":3413,"byte_end":6443,"line_start":115,"line_end":193,"column_start":12,"column_end":6,"is_primary":false,"text":[{"text":"    }) => {{","highlight_start":12,"highlight_end":13},{"text":"        use $crate::macros::support::{maybe_done, poll_fn, Future, Pin};","highlight_start":1,"highlight_end":73},{"text":"        use $crate::macros::support::Poll::{Ready, Pending};","highlight_start":1,"highlight_end":61},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        // Safety: nothing must be moved out of `futures`. This is to satisfy","highlight_start":1,"highlight_end":78},{"text":"        // the requirement of `Pin::new_unchecked` called below.","highlight_start":1,"highlight_end":65},{"text":"        let mut futures = ( $( maybe_done($e), )* );","highlight_start":1,"highlight_end":53},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        // Each time the future created by poll_fn is polled, a different future will be polled first","highlight_start":1,"highlight_end":102},{"text":"        // to ensure every future passed to join! gets a chance to make progress even if","highlight_start":1,"highlight_end":89},{"text":"        // one of the futures consumes the whole budget.","highlight_start":1,"highlight_end":57},{"text":"        //","highlight_start":1,"highlight_end":11},{"text":"        // This is number of futures that will be skipped in the first loop","highlight_start":1,"highlight_end":76},{"text":"        // iteration the next time.","highlight_start":1,"highlight_end":36},{"text":"        let mut skip_next_time: u32 = 0;","highlight_start":1,"highlight_end":41},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        poll_fn(move |cx| {","highlight_start":1,"highlight_end":28},{"text":"            const COUNT: u32 = $($total)*;","highlight_start":1,"highlight_end":43},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            let mut is_pending = false;","highlight_start":1,"highlight_end":40},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            let mut to_run = COUNT;","highlight_start":1,"highlight_end":36},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            // The number of futures that will be skipped in the first loop iteration","highlight_start":1,"highlight_end":86},{"text":"            let mut skip = skip_next_time;","highlight_start":1,"highlight_end":43},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            skip_next_time = if skip + 1 == COUNT { 0 } else { skip + 1 };","highlight_start":1,"highlight_end":75},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            // This loop runs twice and the first `skip` futures","highlight_start":1,"highlight_end":65},{"text":"            // are not polled in the first iteration.","highlight_start":1,"highlight_end":54},{"text":"            loop {","highlight_start":1,"highlight_end":19},{"text":"            $(","highlight_start":1,"highlight_end":15},{"text":"                if skip == 0 {","highlight_start":1,"highlight_end":31},{"text":"                    if to_run == 0 {","highlight_start":1,"highlight_end":37},{"text":"                        // Every future has been polled","highlight_start":1,"highlight_end":56},{"text":"                        break;","highlight_start":1,"highlight_end":31},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                    to_run -= 1;","highlight_start":1,"highlight_end":33},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    // Extract the future for this branch from the tuple.","highlight_start":1,"highlight_end":74},{"text":"                    let ( $($skip,)* fut, .. ) = &mut futures;","highlight_start":1,"highlight_end":63},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    // Safety: future is stored on the stack above","highlight_start":1,"highlight_end":67},{"text":"                    // and never moved.","highlight_start":1,"highlight_end":40},{"text":"                    let mut fut = unsafe { Pin::new_unchecked(fut) };","highlight_start":1,"highlight_end":70},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    // Try polling","highlight_start":1,"highlight_end":35},{"text":"                    if fut.as_mut().poll(cx).is_pending() {","highlight_start":1,"highlight_end":60},{"text":"                        is_pending = true;","highlight_start":1,"highlight_end":43},{"text":"                    } else if fut.as_mut().output_mut().expect(\"expected completed future\").is_err() {","highlight_start":1,"highlight_end":103},{"text":"                        return Ready(Err(fut.take_output().expect(\"expected completed future\").err().unwrap()))","highlight_start":1,"highlight_end":112},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                } else {","highlight_start":1,"highlight_end":25},{"text":"                    // Future skipped, one less future to skip in the next iteration","highlight_start":1,"highlight_end":85},{"text":"                    skip -= 1;","highlight_start":1,"highlight_end":31},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            )*","highlight_start":1,"highlight_end":15},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            if is_pending {","highlight_start":1,"highlight_end":28},{"text":"                Pending","highlight_start":1,"highlight_end":24},{"text":"            } else {","highlight_start":1,"highlight_end":21},{"text":"                Ready(Ok(($({","highlight_start":1,"highlight_end":30},{"text":"                    // Extract the future for this branch from the tuple.","highlight_start":1,"highlight_end":74},{"text":"                    let ( $($skip,)* fut, .. ) = &mut futures;","highlight_start":1,"highlight_end":63},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    // Safety: future is stored on the stack above","highlight_start":1,"highlight_end":67},{"text":"                    // and never moved.","highlight_start":1,"highlight_end":40},{"text":"                    let mut fut = unsafe { Pin::new_unchecked(fut) };","highlight_start":1,"highlight_end":70},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    fut","highlight_start":1,"highlight_end":24},{"text":"                        .take_output()","highlight_start":1,"highlight_end":39},{"text":"                        .expect(\"expected completed future\")","highlight_start":1,"highlight_end":61},{"text":"                        .ok()","highlight_start":1,"highlight_end":30},{"text":"                        .expect(\"expected Ok(_)\")","highlight_start":1,"highlight_end":50},{"text":"                },)*)))","highlight_start":1,"highlight_end":24},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }).await","highlight_start":1,"highlight_end":17},{"text":"    }};","highlight_start":1,"highlight_end":6}],"label":"this expression has type `Result<(String, String), std::io::Error>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/gaolle/.cargo/registry/src/mirrors.tuna.tsinghua.edu.cn-df7c3c540f42cdbd/tokio-1.19.2/src/macros/try_join.rs","byte_start":6558,"byte_end":6632,"line_start":198,"line_end":198,"column_start":7,"column_end":81,"is_primary":false,"text":[{"text":"      $crate::try_join!(@{ ($($s)* _) ($($n)* + 1) $($t)* ($($s)*) $e, } $($r)*)","highlight_start":7,"highlight_end":81}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/gaolle/.cargo/registry/src/mirrors.tuna.tsinghua.edu.cn-df7c3c540f42cdbd/tokio-1.19.2/src/macros/try_join.rs","byte_start":6558,"byte_end":6632,"line_start":198,"line_end":198,"column_start":7,"column_end":81,"is_primary":false,"text":[{"text":"      $crate::try_join!(@{ ($($s)* _) ($($n)* + 1) $($t)* ($($s)*) $e, } $($r)*)","highlight_start":7,"highlight_end":81}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/gaolle/.cargo/registry/src/mirrors.tuna.tsinghua.edu.cn-df7c3c540f42cdbd/tokio-1.19.2/src/macros/try_join.rs","byte_start":6712,"byte_end":6750,"line_start":204,"line_end":204,"column_start":9,"column_end":47,"is_primary":false,"text":[{"text":"        $crate::try_join!(@{ () (0) } $($e,)*)","highlight_start":9,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":304,"byte_end":321,"line_start":14,"line_end":14,"column_start":32,"column_end":49,"is_primary":false,"text":[{"text":"    let (content1, content2) = try_join!(f1, f2);","highlight_start":32,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"try_join!","def_site_span":{"file_name":"/Users/gaolle/.cargo/registry/src/mirrors.tuna.tsinghua.edu.cn-df7c3c540f42cdbd/tokio-1.19.2/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::try_join!","def_site_span":{"file_name":"/Users/gaolle/.cargo/registry/src/mirrors.tuna.tsinghua.edu.cn-df7c3c540f42cdbd/tokio-1.19.2/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::try_join!","def_site_span":{"file_name":"/Users/gaolle/.cargo/registry/src/mirrors.tuna.tsinghua.edu.cn-df7c3c540f42cdbd/tokio-1.19.2/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::try_join!","def_site_span":{"file_name":"/Users/gaolle/.cargo/registry/src/mirrors.tuna.tsinghua.edu.cn-df7c3c540f42cdbd/tokio-1.19.2/src/macros/try_join.rs","byte_start":3037,"byte_end":3058,"line_start":103,"line_end":103,"column_start":1,"column_end":22,"is_primary":false,"text":[{"text":"macro_rules! try_join {","highlight_start":1,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"expected enum `Result<(String, String), std::io::Error>`\n  found tuple `(_, _)`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:14:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    let (content1, content2) = try_join!(f1, f2);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis expression has type `Result<(String, String), std::io::Error>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected enum `Result`, found tuple\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected enum `\u001b[0m\u001b[0m\u001b[1mResult<(String, String), std::io::Error>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m             found tuple `\u001b[0m\u001b[0m\u001b[1m(_, _)\u001b[0m\u001b[0m`\u001b[0m\n\n"}
{"message":"`main` function is not allowed to be `async`","code":{"code":"E0752","explanation":"The entry point of the program was marked as `async`.\n\nErroneous code example:\n\n```compile_fail,E0752\nasync fn main() -> Result<(), ()> { // error!\n    Ok(())\n}\n```\n\n`fn main()` or the specified start function is not allowed to be `async`. Not\nhaving a correct async runtime library setup may cause this error. To fix it,\ndeclare the entry point without `async`:\n\n```\nfn main() -> Result<(), ()> { // ok!\n    Ok(())\n}\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":157,"byte_end":172,"line_start":11,"line_end":11,"column_start":1,"column_end":16,"is_primary":true,"text":[{"text":"async fn main() {","highlight_start":1,"highlight_end":16}],"label":"`main` function is not allowed to be `async`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0752]\u001b[0m\u001b[0m\u001b[1m: `main` function is not allowed to be `async`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:11:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0masync fn main() {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`main` function is not allowed to be `async`\u001b[0m\n\n"}
{"message":"aborting due to 8 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 8 previous errors\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0308, E0412, E0432, E0433, E0752.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0308, E0412, E0432, E0433, E0752.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0308`.\u001b[0m\n"}
